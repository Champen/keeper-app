{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lars_\\\\Desktop\\\\Web Udvikling\\\\React\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Lars_\\\\Desktop\\\\Web Udvikling\\\\React\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lars_\\\\Desktop\\\\Web Udvikling\\\\React\\\\keeper-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lars_\\\\Desktop\\\\Web Udvikling\\\\React\\\\keeper-app\\\\src\\\\components\\\\CreateArea.jsx\";\nimport React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  //We use this for our zoom function\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isExpanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var _useState3 = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      note = _useState4[0],\n      setNote = _useState4[1];\n\n  function handleChange(event) {\n    //Getting the event.target.name AND event.target.value with this destructured array \n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value; //Adding to our note \n    //Recieving the previous notes\n\n    setNote(function (prevNote) {\n      //Adding to existing note. If we are writing in title input the note.title will get update and the same if we are writing in the content input\n      return _objectSpread(_objectSpread({}, prevNote), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  function submitNote(event) {\n    //Callinng the addNote function in app.jsx.\n    props.onAdd(note); //Clearing the title and content when we have added a Note\n\n    setNote({\n      title: \"\",\n      content: \"\"\n    }); //Stops the page to refresh\n\n    event.preventDefault();\n  }\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, isExpanded && /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\" //When we click in the textarea we call the expand function\n    ,\n    onClick: expand,\n    onChange: handleChange,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: isExpanded ? 3 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Zoom, {\n    in: isExpanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["C:/Users/Lars_/Desktop/Web Udvikling/React/keeper-app/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","isExpanded","setExpanded","title","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","expand"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB;AACA,kBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,UAAP;AAAA,MAAmBC,WAAnB;;AAGF,mBAAwBP,QAAQ,CAAC;AAC/BQ,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAKA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AACF,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd,CAF2B,CAI3B;AACA;;AACAL,IAAAA,OAAO,CAAC,UAAAM,QAAQ,EAAI;AAChB;AACF,6CACKA,QADL,2BAGGF,IAHH,EAGUC,KAHV;AAKD,KAPM,CAAP;AAQD;;AAED,WAASE,UAAT,CAAoBL,KAApB,EAA2B;AACvB;AACFR,IAAAA,KAAK,CAACc,KAAN,CAAYT,IAAZ,EAFyB,CAGzB;;AACAC,IAAAA,OAAO,CAAC;AACNH,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAD,CAAP,CAJyB,CAQzB;;AACAI,IAAAA,KAAK,CAACO,cAAN;AACD;;AAED,WAASC,MAAT,GAAkB;AAChBd,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAGH,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,UAAU,iBACT;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAEM,YAFZ;AAGE,IAAA,KAAK,EAAEF,IAAI,CAACF,KAHd;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAWE;AACE,IAAA,IAAI,EAAC,SADP,CAEE;AAFF;AAGE,IAAA,OAAO,EAAEa,MAHX;AAIE,IAAA,QAAQ,EAAET,YAJZ;AAKE,IAAA,KAAK,EAAEF,IAAI,CAACD,OALd;AAME,IAAA,WAAW,EAAC,gBANd;AAOE,IAAA,IAAI,EAAEH,UAAU,GAAG,CAAH,GAAO,CAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAoBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEY,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CApBF,CADF,CADJ;AA+BC;;AAED,eAAed,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\n\r\nfunction CreateArea(props) {\r\n    //We use this for our zoom function\r\n    const [isExpanded, setExpanded] = useState(false);\r\n\r\n\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  function handleChange(event) {\r\n      //Getting the event.target.name AND event.target.value with this destructured array \r\n    const { name, value } = event.target;\r\n\r\n    //Adding to our note \r\n    //Recieving the previous notes\r\n    setNote(prevNote => {\r\n        //Adding to existing note. If we are writing in title input the note.title will get update and the same if we are writing in the content input\r\n      return {\r\n        ...prevNote,\r\n        //[event.target.name]: value of that inputfield\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n      //Callinng the addNote function in app.jsx.\r\n    props.onAdd(note);\r\n    //Clearing the title and content when we have added a Note\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    //Stops the page to refresh\r\n    event.preventDefault();\r\n  }\r\n\r\n  function expand() {\r\n    setExpanded(true);\r\n  }\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <form className=\"create-note\">\r\n      {/*If expanded is true show*/ }\r\n        {isExpanded && (\r\n          <input\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n          />\r\n        )}\r\n\r\n        <textarea\r\n          name=\"content\"\r\n          //When we click in the textarea we call the expand function\r\n          onClick={expand}\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          rows={isExpanded ? 3 : 1}\r\n        />\r\n        <Zoom in={isExpanded}>\r\n          {/*Sending our created Note back to the App.jsx */ }\r\n          <Fab onClick={submitNote}> {/*Fab is a floating action button from material design */ }\r\n            <AddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n\r\n"]},"metadata":{},"sourceType":"module"}